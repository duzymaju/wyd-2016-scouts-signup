services:
    wyd2016bundle.alias.manager_service:
        alias:                          doctrine

    wyd2016bundle.group.repository:
        arguments:
            -                           Wyd2016Bundle\Entity\Group
        class:                          Wyd2016Bundle\Entity\Repository\GroupRepository
        factory:                        [@wyd2016bundle.alias.manager_service, getRepository]

    wyd2016bundle.language.repository:
        arguments:
            -                           Wyd2016Bundle\Entity\Language
        class:                          Wyd2016Bundle\Entity\Repository\LanguageRepository
        factory:                        [@wyd2016bundle.alias.manager_service, getRepository]

    wyd2016bundle.permission.repository:
        arguments:
            -                           Wyd2016Bundle\Entity\Permission
        class:                          Wyd2016Bundle\Entity\Repository\PermissionRepository
        factory:                        [@wyd2016bundle.alias.manager_service, getRepository]

    wyd2016bundle.pilgrim.repository:
        arguments:
            -                           Wyd2016Bundle\Entity\Pilgrim
        class:                          Wyd2016Bundle\Entity\Repository\PilgrimRepository
        factory:                        [@wyd2016bundle.alias.manager_service, getRepository]

    wyd2016bundle.troop.repository:
        arguments:
            -                           Wyd2016Bundle\Entity\Troop
        class:                          Wyd2016Bundle\Entity\Repository\TroopRepository
        factory:                        [@wyd2016bundle.alias.manager_service, getRepository]

    wyd2016bundle.volunteer.repository:
        arguments:
            -                           Wyd2016Bundle\Entity\Volunteer
        calls:
            -                           [setRegistrationLists, [@wyd2016bundle.registration.lists]]
        class:                          Wyd2016Bundle\Entity\Repository\VolunteerRepository
        factory:                        [@wyd2016bundle.alias.manager_service, getRepository]
